# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/

# TypeScript compiled JavaScript files
backend/dist/
frontend/dist/
AI\ Soil\ moisture/backend/dist/
AI\ Soil\ moisture/frontend/dist/

# Build outputs
build/
dist/

# Environment variables (IMPORTANT: Contains sensitive data)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.production
*.env
*/.env
*/.env.*
AI\ Soil\ moisture/backend/.env
AI\ Soil\ moisture/frontend/.env
backend/.env
frontend/.env

# Database files
*.db
*.sqlite
*.sqlite3

# API Keys and Configuration files containing sensitive data
config/keys.js
config/prod.js
src/config/keys.js
backend/config/prod.js
AI\ Soil\ moisture/backend/config/prod.js

# Firebase configuration files (if they contain sensitive keys)
firebase-config.js
firebase.json
.firebaserc

# Database connection strings and secrets
database.json
secrets.json

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows specific
desktop.ini
$RECYCLE.BIN/

# Images and media files (optional - uncomment if you want to exclude large media files)
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.webp
# *.svg
# *.mp4
# *.avi
# *.mov

# Python cache files (if any Python scripts are used)
__pycache__/
*.py[cod]
*$py.class
*.so

# Machine Learning model files (can be large)
*.pkl
*.joblib
*.h5
*.model
*.weights

# Jupyter Notebook checkpoints
.ipynb_checkpoints

# pytest cache
.pytest_cache/

# mypy cache
.mypy_cache/
.dmypy.json
dmypy.json

# Documentation generated files
docs/_build/

# Package files
*.tar.gz
*.zip
*.rar

# Backup files
*.bak
*.backup
*.old

# SSL certificates and keys
*.pem
*.key
*.crt
*.cert
*.p12
*.pfx

# Local development files
.local
.cache

# Yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# ESLint cache
.eslintcache

# Prettier cache
.prettier-cache

# Stylelint cache
.stylelintcache

# Hot Module Replacement (HMR) files
.hot-update.json
*.hot-update.js

# Lock files (optional - some prefer to include these for reproducible builds)
# package-lock.json
# yarn.lock

# Custom application logs
app.log
error.log
access.log

# Test files and coverage reports
coverage/
test-results/
junit.xml

# Deployment files
deploy.sh
deployment/
.deployment

# Local storage files
localStorage/
sessionStorage/

# Temporary upload files
uploads/temp/
temp-uploads/

# AI/ML related files
data/
datasets/
models/trained/
checkpoints/

# MongoDB dumps
*.dump
*.bson

# Redis dumps
dump.rdb

# Session files
sessions/

# Cache directories
.cache/
.tmp/

# User-specific files
.user
.userprefs
.suo
*.user

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Vim
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Custom ignore for this project
# Add any project-specific files that should not be committed
config/database.js
config/secrets.js
private/
sensitive/

# Additional security files
.secrets
secrets/
credentials/
keys/
certs/

# Deployment and infrastructure files
docker-compose.override.yml
.dockerignore
Dockerfile.prod
k8s/secrets/
terraform.tfvars
.terraform/

# Application specific sensitive files
uploads/
user-uploads/
static/uploads/
media/uploads/

# MongoDB data directory (if running locally)
data/
mongodb/
db-data/

# Redis data
redis-data/

# Application logs with potential sensitive data
*.log
logs/
log/

# Testing files that might contain sensitive data
.env.test
test-results/
coverage/

# IDE workspace files
.vscode/settings.json
.idea/workspace.xml

# AnnDataAI - IBM Granite AI Hackathon Project Specific Ignores

# CRITICAL: IBM Watson API Keys and Credentials (NEVER COMMIT THESE)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
**/config/credentials.json
**/config/ibm-credentials.env
watsonx-api-key.txt
watson-credentials.*

# Build outputs
dist/
dist-ssr/
build/

# Logs
logs/
*.log

# Test artifacts
test-results/
screenshots/
videos/

# Hackathon specific
demo-videos/
presentation-drafts/
backup/
temp/

# Internal setup and documentation files (not needed for hackathon submission)
GITHUB_REPOSITORY_SETUP.md
MIGRATION_COMPLETION_SUMMARY.md
IBM_WATSONX_SETUP_GUIDE.md
HACKATHON_NEXT_STEPS_GUIDE.md
IBM_GRANITE_MODEL_OPTIMIZATION_GUIDE.md
IBM_GRANITE_INTEGRATION_COMPLETE.md

# Test files
test-*.js
*-test.js
.vercel
